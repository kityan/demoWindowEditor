"use strict";!function(){function e(e,t,r,n){var a="ontouchstart"in window||navigator.MaxTouchPoints>0||navigator.msMaxTouchPoints>0;a?n.options({trigger:"dontTrigger"}):n.options({trigger:"mouseenter"}),t.otherwise("/"),e.state("main",{url:"/",views:{nav:{templateUrl:"views/nav.tpl.html"},main:{templateUrl:"views/main.tpl.html",controller:"MainController"}}})}angular.module("app",["app-templates","ui.router","ui.bootstrap","ui.bootstrap.contextMenu"]).config(["$stateProvider","$urlRouterProvider","$sceDelegateProvider","$uibTooltipProvider",e])}(),function(){angular.module("app").constant("ModelsExamples",{models:[{name:"Пустой проём 1900×1000",data:{formatVersion:1,aperture:{size:{vertical:1e3,horizontal:1900},content:null}}},{name:"Только квадратная рама 1000×1000",data:{formatVersion:1,aperture:{size:{vertical:1e3,horizontal:1e3},content:{type:"frame",properties:{sizes:{heightFront:48,heightRear:68,beadHeight:18}},aperture:{}}}}},{name:"Квадратная рама 1000×1000 с остеклением",data:{formatVersion:1,aperture:{size:{vertical:1e3,horizontal:1e3},content:{type:"frame",properties:{sizes:{heightFront:48,heightRear:68,beadHeight:18}},aperture:{content:{type:"glass"}}}}}},{name:"Квадратная рама 1000×1000 со створкой с остеклением",data:{formatVersion:1,aperture:{size:{vertical:1e3,horizontal:1e3},content:{type:"frame",properties:{sizes:{heightFront:48,heightRear:68,beadHeight:18}},aperture:{content:{type:"sash",properties:{handleSide:"left",tilt:!0,sizes:{labelPadding:20,heightFront:52,heightRear:72,overlap:8,beadHeight:18}},aperture:{content:{type:"glass"}}}}}}}},{name:"Рама 2000×1500 с импостом со смещением",data:{formatVersion:1,aperture:{size:{vertical:1500,horizontal:2e3},content:{type:"frame",properties:{sizes:{heightFront:48,heightRear:68,beadHeight:18}},aperture:{content:{type:"impost",properties:{offsetLeft:-200,direction:"vertical",sizes:{heightFront:48,heightRear:88,beadHeight:18}},aperture:[{side:"left"},{side:"right"}]}}}}}},{name:"Рама с двумя створками без остекления 2000×1500",data:{formatVersion:1,aperture:{size:{vertical:1500,horizontal:2e3},content:{type:"frame",properties:{sizes:{heightFront:48,heightRear:68,beadHeight:18}},aperture:{content:{type:"impost",properties:{offsetLeft:0,direction:"vertical",sizes:{heightFront:48,heightRear:88,beadHeight:18}},aperture:[{side:"left",content:{type:"sash",properties:{handleSide:"right",sizes:{labelPadding:20,heightFront:52,heightRear:72,overlap:8,beadHeight:18}},aperture:{}}},{side:"right",content:{type:"sash",properties:{handleSide:"left",tilt:!1,sizes:{labelPadding:20,heightFront:52,heightRear:72,overlap:8,beadHeight:18}},aperture:{}}}]}}}}}},{name:"Глухое окно и две створки 2800×1600",data:{formatVersion:1,aperture:{size:{vertical:1600,horizontal:2800},content:{type:"frame",properties:{sizes:{heightFront:48,heightRear:68,beadHeight:18}},aperture:{content:{type:"impost",properties:{offsetLeft:-100,direction:"vertical",sizes:{heightFront:48,heightRear:88,beadHeight:18}},aperture:[{side:"left",content:{type:"impost",properties:{offsetLeft:0,direction:"vertical",sizes:{heightFront:48,heightRear:88,beadHeight:18}},aperture:[{side:"left",content:{type:"glass",properties:{sizes:{beadHeight:18}}}},{side:"right",content:{type:"sash",properties:{handleSide:"top",sizes:{labelPadding:20,heightFront:52,heightRear:72,overlap:8,beadHeight:18}},aperture:{content:{type:"glass",properties:{sizes:{beadHeight:18}}}}}}]}},{side:"right",content:{type:"sash",properties:{handleSide:"left",tilt:!0,sizes:{labelPadding:20,heightFront:52,heightRear:72,overlap:8,beadHeight:18}},aperture:{content:{type:"glass",properties:{sizes:{}}}}}}]}}}}}}]})}(),function(){function e(){return{restrict:"E",templateUrl:"directives/svgRenderer/svgRenderer.tpl.html",replace:!0,scope:{model:"<",stat:"="},link:function(e,r,n){e.$watch("model",function(){e.model&&(e.stat=t(angular.copy(e.model),r))})}}}function t(e,t){function r(e,t){var n=a(t);if(e.appendChild(n),t.content){var i=s(t.content,t);n.appendChild(i.pre),t.content.aperture&&(Array.isArray(t.content.aperture)?t.content.aperture.forEach(function(e){r(n,e)}):r(n,t.content.aperture)),i.post&&n.appendChild(i.post)}}function n(e){if(!e._parent)return{translation:{x:0,y:0},points:[{x:0,y:0},{x:e.size.horizontal,y:0},{x:e.size.horizontal,y:e.size.vertical},{x:0,y:e.size.vertical}]};var t=e._parent,r=n(t._parent).points,a=t.properties.sizes.heightFront,s=t.properties.offsetLeft;if("impost"==t.type){var i="left"==e.side;return{points:[{x:0,y:0},{x:(i?s:-s)+(r[1].x-a)/2,y:0},{x:(i?s:-s)+(r[2].x-a)/2,y:r[2].y},{x:0,y:r[2].y}],translation:{x:i?0:s+(r[1].x+a)/2,y:0}}}return{points:[{x:0,y:0},{x:r[1].x-2*a,y:0},{x:r[2].x-2*a,y:r[2].y-2*a},{x:0,y:r[3].y-2*a}],translation:{x:a,y:a}}}function a(e){var t=n(e),r=t.points,a=t.translation,s=u();return d3.select(s).attr("transform","translate("+a.x+","+a.y+")").classed("aperture",!0).classed("aperture--empty",!e.content).attr("fill","url(#img1)").append("svg:path").attr("d",f(r)+" z"),s}function s(e,t){switch(e.type){case"frame":return o(e,t);case"glass":return i(e,t);case"sash":return p(e,t);case"impost":return d(e,t)}}function i(e,t){var r=e._parent._parent.properties.sizes.beadHeight,a=n(t).points;y.glass.rects.push({width:a[1].x-a[0].x,height:a[2].y-a[1].y}),y.bead.lengths.push(a[1].x-a[0].x),y.bead.lengths.push(a[1].x-a[0].x),y.bead.lengths.push(a[2].y-a[1].y),y.bead.lengths.push(a[2].y-a[1].y);var s=u();d3.select(s).classed("glass",!0).classed("content",!0).append("svg:path").attr("d",f(a)+" z");var i=[];i.push({side:"top",points:function(e){return[{x:a[0].x+e,y:a[0].y+e},{x:a[1].x-e,y:a[1].y+e},a[1],a[0]]}}),i.push({side:"left",points:function(e){return[{x:a[0].x+e,y:a[0].y+e},{x:a[3].x+e,y:a[3].y-e},a[3],a[0]]}}),i.push({side:"right",points:function(e){return[{x:a[1].x-e,y:a[1].y+e},{x:a[2].x-e,y:a[2].y-e},a[2],a[1]]}}),i.push({side:"bottom",points:function(e){return[{x:a[3].x+e,y:a[3].y-e},{x:a[2].x-e,y:a[2].y-e},a[2],a[3]]}});for(var o=0;o<i.length;o++){var p=u();d3.select(p).classed("bead bead--"+i[o].side,!0).append("svg:path").attr("d",f(i[o].points(r))+" Z").attr("stroke-linejoin","round").attr("vector-effect","non-scaling-stroke"),s.appendChild(p)}return{pre:s}}function o(e,t){var r=u();d3.select(r).classed("frame",!0).classed("content",!0);var a=n(t).points,s=e.properties.sizes.heightRear,i=e.properties.sizes.heightFront;y.frame.lengths.push(a[1].x-a[0].x),y.frame.lengths.push(a[1].x-a[0].x),y.frame.lengths.push(a[2].y-a[1].y),y.frame.lengths.push(a[2].y-a[1].y);var o=[];o.push({side:"top",points:function(e){return[{x:a[0].x+e,y:a[0].y+e},{x:a[1].x-e,y:a[1].y+e},a[1],a[0]]}}),o.push({side:"left",points:function(e){return[{x:a[0].x+e,y:a[0].y+e},{x:a[3].x+e,y:a[3].y-e},a[3],a[0]]}}),o.push({side:"right",points:function(e){return[{x:a[1].x-e,y:a[1].y+e},{x:a[2].x-e,y:a[2].y-e},a[2],a[1]]}}),o.push({side:"bottom",points:function(e){return[{x:a[3].x+e,y:a[3].y-e},{x:a[2].x-e,y:a[2].y-e},a[2],a[3]]}});for(var p=0;p<o.length;p++){var l=u();d3.select(l).classed("beam beam--"+o[p].side,!0).append("svg:path").attr("d",f(o[p].points(s))+" Z").attr("stroke-linejoin","round").attr("vector-effect","non-scaling-stroke"),d3.select(l).append("svg:path").attr("d",f(o[p].points(i))+" Z").attr("stroke-linejoin","round").attr("vector-effect","non-scaling-stroke"),r.appendChild(l)}return{pre:r}}function p(e,t){var r=u();d3.select(r).classed("sash",!0).classed("content",!0);var a=n(t).points;y.sash.qty++,y.sash.lengths.push(a[1].x-a[0].x),y.sash.lengths.push(a[1].x-a[0].x),y.sash.lengths.push(a[2].y-a[1].y),y.sash.lengths.push(a[2].y-a[1].y);var s=[],i=function(e,t){return[{x:a[0].x+e,y:a[0].y+e},{x:a[1].x-e,y:a[1].y+e},{x:a[1].x+t,y:a[1].y-t},{x:a[0].x-t,y:a[0].y-t}]};s.push({side:"top",points:i}),s.push({side:"bottom",points:i});var o=function(e,t){return[{x:a[0].x+e,y:a[0].y+e},{x:a[3].x+e,y:a[3].y-e},{x:a[3].x-t,y:a[3].y+t},{x:a[0].x-t,y:a[0].y-t}]};s.push({side:"left",points:o}),s.push({side:"right",points:o});for(var p=a[1].x,d=a[2].y,c=0;c<s.length;c++){var g=u();d3.select(g).classed("beam beam--"+s[c].side,!0).attr("transform",function(){return"right"==s[c].side?"scale(-1 1) translate(-"+p+", 0)":"bottom"==s[c].side?"scale(1 -1) translate(0, -"+d+")":null}).append("svg:path").attr("d",f(s[c].points(e.properties.sizes.heightRear,e.properties.sizes.overlap))+" Z").attr("stroke-linejoin","round").attr("vector-effect","non-scaling-stroke"),d3.select(g).append("svg:path").attr("d",f(s[c].points(e.properties.sizes.heightFront,e.properties.sizes.overlap))+" Z").attr("stroke-linejoin","round").attr("vector-effect","non-scaling-stroke"),s[c].side==e.properties.handleSide&&g.appendChild(l(s[c],e)),r.appendChild(g)}return{pre:r,post:h(e,a)}}function l(e,t){var r=e.points(t.properties.sizes.heightFront,t.properties.sizes.overlap),n=d3.min(r,function(e){return e.y}),a=d3.max(r,function(e){return e.y}),s=d3.min(r,function(e){return e.x}),i=d3.max(r,function(e){return e.x}),o="bottom"==e.side||"top"==e.side?"handleHorizontal":"handleVertical",p=document.getElementById(o).getBBox(),l=(i-s-p.width)/2,h=(a-n-p.height)/2,d=u();return d3.select(d).append("svg:use").attr("xlink:href","#"+o).attr("x",l-t.properties.sizes.overlap).attr("y",h-t.properties.sizes.overlap),d}function h(e,t){var r=e.properties.sizes.heightFront+e.properties.sizes.beadHeight+e.properties.sizes.labelPadding,n={};n.top=n.bottom={labelPoints:[{x:t[3].x+r,y:t[3].y-r},{x:t[1].x/2,y:t[1].y+r},{x:t[2].x-r,y:t[2].y-r}],translateValue:t[2].y-t[1].y},n.right=n.left={labelPoints:[{x:t[0].x+r,y:t[0].y+r},{x:t[1].x-r,y:t[2].y/2},{x:t[3].x+r,y:t[3].y-r}],translateValue:t[2].x-t[3].x};var a=u(),s=d3.select(a).classed("sash--label",!0).append("svg:path").attr("d",f(n[e.properties.handleSide].labelPoints)).attr("stroke-linejoin","round").attr("vector-effect","non-scaling-stroke");return"bottom"==e.properties.handleSide&&s.attr("transform",function(){return"scale(1,-1) translate(0, "+-n[e.properties.handleSide].translateValue+")"}),"left"==e.properties.handleSide&&s.attr("transform",function(){return"scale(-1, 1) translate("+-n[e.properties.handleSide].translateValue+", 0)"}),e.properties.tilt&&d3.select(a).append("svg:path").attr("d",f(n.top.labelPoints)).attr("stroke-linejoin","round").attr("vector-effect","non-scaling-stroke"),a}function d(e,t){var r=u();d3.select(r).classed("impost",!0).classed("content",!0);var a=u(),s=n(t).points;y.impost.qty++,y.impost.lengths.push(s[2].y-s[1].y);var i=e.properties.sizes.heightRear,o=e.properties.sizes.heightFront,p=e.properties.offsetLeft,l=(i-o)/2,h=[{x:p+s[1].x/2-i/2,y:s[1].y+l},{x:p+s[1].x/2+i/2,y:s[1].y+l},{x:p+s[2].x/2+i/2,y:s[2].y-l},{x:p+s[2].x/2-i/2,y:s[2].y-l}],d=[{x:p+s[1].x/2-o/2,y:s[1].y},{x:p+s[1].x/2+o/2,y:s[1].y},{x:p+s[2].x/2+o/2,y:s[2].y},{x:p+s[2].x/2-o/2,y:s[2].y}];return d3.select(a).classed("beam beam--vertical",!0).append("svg:path").attr("d",f(h)+" Z").attr("stroke-linejoin","round").attr("vector-effect","non-scaling-stroke"),d3.select(a).append("svg:path").attr("d",f(d)+" Z").attr("stroke-linejoin","round").attr("vector-effect","non-scaling-stroke"),r.appendChild(a),{pre:r}}function c(e){function t(e,r){if(e){e._parent=r;for(var n in e)"content"!=n&&"aperture"!=n||("aperture"==n&&Array.isArray(e[n])&&e[n].forEach(function(r){t(r,e)}),t(e[n],e))}}e.aperture._parent=null;for(var r in e.aperture)"content"!=r&&"aperture"!=r||t(e.aperture[r],e.aperture)}function u(){return document.createElementNS("http://www.w3.org/2000/svg","g")}function g(){return{frame:{lengths:[]},impost:{qty:0,lengths:[]},sash:{qty:0,lengths:[]},bead:{lengths:[]},glass:{rects:[]}}}var y=g();c(e);var f=d3.svg.line().x(function(e){return e.x}).y(function(e){return e.y}).interpolate("linear"),x=document.getElementById("svg"),m=svg.clientWidth||svg.parentNode.clientWidth,v=svg.clientHeight||svg.parentNode.clientHeight,z=d3.max([e.aperture.size.horizontal,e.aperture.size.vertical]),b=1,H=[{max:500,scale:.7},{max:800,scale:.5},{max:1e3,scale:.4},{max:1400,scale:.35},{max:1900,scale:.25},{max:2200,scale:.2},{max:3e3,scale:.16}];H.forEach(function(e){b=z>e.max?e.scale:b}),d3.select("#img1").attr("width",20/b).attr("height",20/b),d3.select("#img1 image").attr("width",20/b).attr("height",20/b);for(var x=document.getElementById("view");x.firstChild;)x.removeChild(x.firstChild);return d3.select(x).attr("transform",function(){return"translate("+Math.round(m/2-e.aperture.size.horizontal*b/2)+","+Math.round(v/2-e.aperture.size.vertical*b/2)+") scale("+b+")"}),r(x,e.aperture),y.frame.totalLength=y.frame.lengths.reduce(function(e,t){return e+t},0),y.sash.totalLength=y.sash.lengths.reduce(function(e,t){return e+t},0),y.bead.totalLength=y.bead.lengths.reduce(function(e,t){return e+t},0),y.impost.totalLength=y.impost.lengths.reduce(function(e,t){return e+t},0),y.glass.totalArea=y.glass.rects.reduce(function(e,t){return e+t.width*t.height},0),y}angular.module("app").directive("svgRenderer",e)}(),function(){function e(e,t){e.models=t.models,e.selectedModelData=t.models[0].data,e.render=function(r){e.selectedModelData=t.models[r].data}}angular.module("app").controller("MainController",["$scope","ModelsExamples",e])}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
